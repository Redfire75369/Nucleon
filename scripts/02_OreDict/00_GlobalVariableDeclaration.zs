#loader crafttweaker
#priority -0200
#packmode theta sigma omega

import crafttweaker.item.IItemStack;
import crafttweaker.liquid.ILiquidStack;
import crafttweaker.oredict.IOreDictEntry;
import mod.mekanism.gas.IGasStack;
import mods.mekanism.MekanismHelper.getGas;

/* Declaring Other Variables */
global sand as IItemStack = <minecraft:sand> as IItemStack;
global cinnabar as IItemStack = <thermalfoundation:material:866> as IItemStack;

/******************** Assigning a HashMap for each Ore Dictionaries ********************/
/********** Items **********/
/***** Ores *****/
global hashOre as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringOre = [
//SILK_SORTING: BEGIN@Ore
	"Aluminium",
	"Bauxite",
	"Boron",
	"CertusQuartz",
	"ChargedCertusQuartz",
	"Coal",
	"Copper",
	"Diamond",
	"Emerald",
	"Galena",
	"Garnet",
	"Gold",
	"Iridium",
	"Iron",
	"Lapis",
	"Lead",
	"Lithium",
	"Magnesium",
	"Mithril",
	"Nickel",
	"Osmium",
	"Platinum",
	"Pyrite",
	"Quartz",
	"Redstone",
	"Ruby",
	"Sheldonite",
	"Silver",
	"Sodalite",
	"Sphalerite",
	"Thorium",
	"Tin",
	"Tungsten",
	"Uranium"
//SILK_SORTING: END@Ore
] as string[];
for ore in stringOre {
	hashOre[ore] = oreDict["ore" ~ ore];
}

/***** Clathrate Ores *****/
global hashOreClathrate as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringOreClathrate = [

	"Ender",
	"Glowstone",
	"Oil",
	"Redstone" 

] as string[];
for oreClathrate in stringOreClathrate{ 
	hashOreClathrate[oreClathrate] = oreDict["ore" ~ oreClathrate ~ "Clathrate"];
}

/***** Chunks *****/
global hashChunk as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringChunk = [

	"Aluminium",
	"Boron",
	"Cobalt",
	"Copper",
	"Draconium",
	"Gold",
	"Iridium",
	"Iron",
	"Lead",
	"Lithium",
	"Magnesium",
	"Mithril",
	"Nickel",
	"Osmium",
	"Platinum",
	"Silver",
	"Thorium",
	"Tin",
	"Tungsten",
	"Uranium"

] as string[];
for chunk in stringChunk {
	hashChunk[chunk] = oreDict["chunk" ~ chunk];
}

/***** Rocky Chunks *****/
global hashChunkRocky as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringChunkRocky = [

	"Aluminium",
	"Boron",
	"Cobalt",
	"Copper",
	"Draconium",
	"Gold",
	"Iridium",
	"Iron",
	"Lead",
	"Lithium",
	"Magnesium",
	"Mithril",
	"Nickel",
	"Osmium",
	"Platinum",
	"Silver",
	"Thorium",
	"Tin",
	"Tungsten",
	"Uranium"

] as string[];
for chunkRocky in stringChunkRocky {
	hashChunkRocky[chunkRocky] = oreDict["rockyChunk" ~ chunkRocky];
}

/***** Dirty Dusts *****/
global hashDustDirty as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringDustDirty = [
//SILK_SORTING: BEGIN@DirtyDust
	"Aluminium",
	"Boron",
	"Cobalt",
	"Copper",
	"Draconium",
	"Gold",
	"Iridium",
	"Iron",
	"Lead",
	"Lithium",
	"Magnesium",
	"Mithril",
	"Nickel",
	"Osmium",
	"Platinum",
	"Silver",
	"Thorium",
	"Tin",
	"Tungsten",
	"Uranium" 
//SILK_SORTING: END@DirtyDust
] as string[];
for dustDirty in stringDustDirty {
	hashDustDirty[dustDirty] = oreDict["dustDirty" ~ dustDirty];
}

/***** Clumps *****/
global hashClump as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringClump = [
//SILK_SORTING: BEGIN@Clump
	"Aluminium",
	"Boron",
	"Cobalt",
	"Copper",
	"Draconium",
	"Gold",
	"Iridium",
	"Iron",
	"Lead",
	"Lithium",
	"Magnesium",
	"Mithril",
	"Nickel",
	"Osmium",
	"Platinum",
	"Silver",
	"Thorium",
	"Tin",
	"Tungsten",
	"Uranium"
//SILK_SORTING: END@Clump
] as string[];
for clump in stringClump {
	hashClump[clump] = oreDict["clump" ~ clump];
}

/***** Shards *****/
global hashShard as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringShard = [
//SILK_SORTING: BEGIN@Shard
	"Aluminium",
	"Boron",
	"Cobalt",
	"Copper",
	"Draconium",
	"Gold",
	"Iridium",
	"Iron",
	"Lead",
	"Lithium",
	"Magnesium",
	"Mithril",
	"Nickel",
	"Osmium",
	"Platinum",
	"Silver",
	"Thorium",
	"Tin",
	"Tungsten",
	"Uranium"
//SILK_SORTING: END@Shard
] as string[];
for shard in stringShard {
	hashShard[shard] = oreDict["shard" ~ shard];
}


/***** Crystals *****/
global hashCrystal as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringCrystal = [
//SILK_SORTING: BEGIN@Crystal
	"Aluminium",
	"Boron",
	"Cobalt",
	"Copper",
	"Draconium",
	"Fluix",
	"Gold",
	"Iridium",
	"Iron",
	"Lead",
	"Lithium",
	"Magnesium",
	"Mithril",
	"Nickel",
	"Osmium",
	"Platinum",
	"PureCertusQuartz",
	"PureFluix",
	"PureNetherQuartz",
	"Silver",
	"Slag",
	"SlagRich",
	"Thorium",
	"Tin",
	"Tungsten",
	"Uranium"
//SILK_SORTING: END@Crystal
] as string[];
for crystal in stringCrystal {
	hashCrystal[crystal] = oreDict["crystal" ~ crystal];
}

/***** Ingots *****/
global hashIngot as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringIngot = [
//SILK_SORTING: BEGIN@Ingot
	"Adaminite",
	"AdvancedAlloy",
	"Aluminium",
	"Antimony",
	"Beryllium",
	"Boron",
	"Boron10",
	"Boron11",
	"Brass",
	"Brick",
	"BrickNether",
	"BrickNetherGlazed",
	"BrickSeared",
	"Bronze",
	"Chocolate",
	"Chrome",
	"Cobalt",
	"CocoaButter",
	"ConductiveIron",
	"Constantan",
	"ConstructionAlloy",
	"Copper",
	"CrudeSteel",
	"CrystallineAlloy",
	"CrystallinePinkSlime",
	"DarkChocolate",
	"DarkSteel",
	"Dawnstone",
	"ElectricalSteel",
	"Electrum",
	"ElectrumFlux",
	"Enderium",
	"EnderiumBase",
	"EndSteel",
	"EnergeticAlloy",
	"EnergeticSilver",
	"Extreme",
	"Ferroboron",
	"Gold",
	"Graphite",
	"HardCarbon",
	"HOPGraphite",
	"HotTungstensteel",
	"HSLASteel",
	"Invar",
	"Iridium",
	"IridiumAlloy",
	"Iron",
	"IronCompressed",
	"Lead",
	"LeadPlatinum",
	"Lithium",
	"Lithium6",
	"Lithium7",
	"LithiumManganeseDioxide",
	"Lumium",
	"Magnesium",
	"MagnesiumDiboride",
	"Manganese",
	"ManganeseDioxide",
	"ManganeseOxide",
	"MeatCooked",
	"MeatRaw",
	"MelodicAlloy",
	"Mithril",
	"MixedMetal",
	"Nickel",
	"Osmium",
	"Platinum",
	"PulsatingIron",
	"RedstoneAlloy",
	"RefinedGlowstone",
	"RefinedIron",
	"RefinedObsidian",
	"Shibuichi",
	"SiCSiCCMC",
	"Signalum",
	"SiliconCarbide",
	"Silver",
	"SlimePink",
	"Soularium",
	"StellarAlloy",
	"Thermoconducting",
	"Thorium",
	"ThoriumOxide",
	"Tin",
	"TinSilver",
	"Titanium",
	"Tough",
	"Tungsten",
	"Tungstensteel",
	"UnsweetenedChocolate",
	"Uranium",
	"UraniumOxide",
	"VibrantAlloy",
	"VividAlloy",
	"Zinc",
	"Zircaloy",
	"Zirconium"
//SILK_SORTING: END@Ingot
] as string[];
for ingot in stringIngot { 
	hashIngot[ingot] = oreDict["ingot" ~ ingot];
}

/***** Gems *****/
global hashGem as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringGem = [
//SILK_SORTING: BEGIN@Gem
	"BoronArsenide",
	"BoronNitride",
	"Carobbiite",
	"CertusQuartz",
	"Charcoal",
	"ChargedCertusQuartz",
	"Coal",
	"CrystalFlux",
	"Diamond",
	"Emerald",
	"Fluix",
	"Fluorite",
	"Garnet",
	"Gelid",
	"Lapis",
	"Peridot",
	"Prismarine",
	"Psi",
	"Quartz",
	"RedGarnet",
	"Rhodocrosite",
	"Ruby",
	"Sapphire",
	"Villiaumite",
	"YellowGarnet"
//SILK_SORTING: END@Gem
] as string[];
for gem in stringGem {
	hashGem[gem] = oreDict["gem" ~ gem];
}

/***** Clathrates *****/
global hashClathrate as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringClathrate = [
//SILK_SORTING: BEGIN@Clathrate
	"Ender",
	"Glowstone",
	"Oil",
	"Redstone"
//SILK_SORTING: END@Clathrate
] as string[];
for clathrate in stringClathrate{ 
	hashClathrate[clathrate] = oreDict["clathrate" ~ clathrate];
}

/***** Nuggets *****/
global hashNugget as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringNugget = [
//SILK_SORTING: BEGIN@Nugget
	"AdvancedAlloy",
	"Aluminium",
	"Boron",
	"Boron10",
	"Boron11",
	"BoronArsenide",
	"BoronNitride",
	"Brass",
	"Bronze",
	"Carobbiite",
	"CertusQuartz",
	"ChargedCertusQuartz",
	"Chrome",
	"Coal",
	"Cobalt",
	"ConductiveIron",
	"Constantan",
	"ConstructionAlloy",
	"Copper",
	"CrudeSteel",
	"CrystalFlux",
	"CrystallineAlloy",
	"CrystallinePinkSlime",
	"DarkSteel",
	"Dawnstone",
	"Diamond",
	"ElectricalSteel",
	"Electrum",
	"ElectrumFlux",
	"Emerald",
	"Enderium",
	"Enderpearl",
	"EndSteel",
	"EnergeticAlloy",
	"EnergeticSilver",
	"Extreme",
	"Ferroboron",
	"Fluix",
	"Fluorite",
	"Garnet",
	"Gold",
	"Graphite",
	"HardCarbon",
	"HOPGraphite",
	"HotTungstensteel",
	"HSLASteel",
	"Invar",
	"Iridium",
	"IridiumAlloy",
	"Iron",
	"Lapis",
	"Lead",
	"LeadPlatinum",
	"Lithium",
	"Lithium6",
	"Lithium7",
	"LithiumManganeseDioxide",
	"Lumium",
	"Magnesium",
	"MagnesiumDiboride",
	"Manganese",
	"ManganeseDioxide",
	"ManganeseOxide",
	"Meat",
	"MeatRaw",
	"MelodicAlloy",
	"Mithril",
	"MixedMetal",
	"Nickel",
	"Obsidian",
	"Osmium",
	"Peridot",
	"Platinum",
	"Prismarine",
	"PulsatingIron",
	"Quartz",
	"RedGarnet",
	"RedstoneAlloy",
	"RefinedGlowstone",
	"RefinedIron",
	"RefinedObsidian",
	"Rhodocrosite",
	"Ruby",
	"Sapphire",
	"Shibuichi",
	"SiCSiCCMC",
	"Signalum",
	"SiliconCarbide",
	"Silver",
	"Soularium",
	"Steel",
	"StellarAlloy",
	"Thermoconducting",
	"Thorium",
	"ThoriumOxide",
	"Tin",
	"TinSilver",
	"Titanium",
	"Tough",
	"Tungsten",
	"Tungstensteel",
	"Uranium",
	"VibrantAlloy",
	"Villiaumite",
	"VividAlloy",
	"YellowGarnet",
	"Zinc",
	"Zircaloy",
	"Zirconium"
//SILK_SORTING: END@Nugget
] as string[];
for nugget in stringNugget {
	hashNugget[nugget] = oreDict["nugget" ~ nugget];
}

/***** Dusts *****/
global hashDust as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringDust = [
//SILK_SORTING: BEGIN@Dust
	"AdvancedAlloy",
	"Aerotheum",
	"Almandine",
	"Alugentum",
	"Aluminium",
	"Andesite",
	"Andradite",
	"Ash",
	"Arsenic",
	"Basalt",
	"Basalz",
	"Bauxite",
	"Bedrock",
	"Beryllium",
	"Blaze",
	"Blitz",
	"Blizz",
	"Borax",
	"Boron",
	"BoronArsenide",
	"BoronNitride",
	"Brass",
	"Bronze",
	"Calcite",
	"CalciumSulfate",
	"CarbonManganese",
	"Carobbiite",
	"CertusQuartz",
	"Charcoal",
	"ChargedCertusQuartz",
	"Chrome",
	"Cinnabar",
	"Coal",
	"Cobalt",
	"Cocoa",
	"Coke",
	"ConductiveIron",
	"Constantan",
	"ConstructionAlloy",
	"Copper",
	"CrudeSteel",
	"Cryotheum",
	"CrystalBinder",
	"CrystalFlux",
	"CrystallineAlloy",
	"CrystallinePinkSlime",
	"DarkAshes",
	"DarkSteel",
	"Dawnstone",
	"Diamond",
	"Dimensional",
	"DimensionalShard",
	"Diorite",
	"ElectricalSteel",
	"Electrum",
	"ElectrumFlux",
	"Ember",
	"Emerald",
	"EnderEye",
	"Enderium",
	"EnderPearl",
	"EndSteel",
	"Endstone",
	"Energetic",
	"EnergeticAlloy",
	"EnergeticSilver",
	"Extreme",
	"Ferroboron",
	"Fluix",
	"Fluorite",
	"Flux",
	"Galena",
	"Garnet",
	"Gelid",
	"Glowstone",
	"Gold",
	"Granite",
	"Graphite",
	"Grossular",
	"HardCarbon",
	"HOPGraphite",
	"HotTungstensteel",
	"HSLASteel",
	"Invar",
	"Iridium",
	"IridiumAlloy",
	"Iron",
	"Lapis",
	"Lazurite",
	"Lead",
	"LeadPlatinum",
	"Lithium",
	"LithiumManganeseDioxide",
	"Lumium",
	"Magnesium",
	"MagnesiumDiboride",
	"Manganese",
	"ManganeseDioxide",
	"ManganeseOxide",
	"Marble",
	"MelodicAlloy",
	"Metallurgic",
	"Mithril",
	"MixedMetal",
	"Netherrack",
	"Nickel",
	"Obsidian",
	"Osmium",
	"Peridot",
	"Petrotheum",
	"Phosphorous",
	"Platinum",
	"PotassiumFlouride",
	"PotassiumHydroxide",
	"Prismarine",
	"PulsatingIron",
	"Pyrite",
	"Pyrope",
	"Pyrotheum",
	"Quartz",
	"RedGarnet",
	"Redstone",
	"RedstoneAlloy",
	"RefinedGlowstone",
	"RefinedIron",
	"RefinedObsidian",
	"Rhodocrosite",
	"Ruby",
	"Salt",
	"Sapphire",
	"Shibuichi",
	"SiCSiCCMC",
	"Signalum",
	"SiliconCarbide",
	"Sodalite",
	"SodiumFlouride",
	"SodiumHydroxide",
	"Soularium",
	"Spessartine",
	"Sphalerite",
	"Steel",
	"StellarAlloy",
	"Thermoconducting",
	"Thorium",
	"ThoriumOxide",
	"Tin",
	"TinSilver",
	"Titanium",
	"Tough",
	"Tungsten",
	"Tungstensteel",
	"Uranium",
	"UraniumOxide",
	"Uvarovite",
	"VibrantAlloy",
	"Villiaumite",
	"VividAlloy",
	"Wheat",
	"Wood",
	"YellowGarnet",
	"Zinc",
	"Zircaloy",
	"Zirconium"
//SILK_SORTING: END@Dust
] as string[];
for dust in stringDust {
	hashDust[dust] = oreDict["dust" ~ dust];
}

/***** Small Dusts *****/
global hashDustSmall as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringDustSmall = [
//SILK_SORTING: BEGIN@SmallDust
	"AdvancedAlloy",
	"Aerotheum",
	"Almandine",
	"Alugentum",
	"Aluminium",
	"Andesite",
	"Andradite",
	"Ash",
	"Arsenic",
	"Basalt",
	"Basalz",
	"Bauxite",
	"Bedrock",
	"Beryllium",
	"Blaze",
	"Blitz",
	"Blizz",
	"Borax",
	"Boron",
	"BoronArsenide",
	"BoronNitride",
	"Brass",
	"Bronze",
	"Calcite",
	"CalciumSulfate",
	"CarbonManganese",
	"Carobbiite",
	"CertusQuartz",
	"Charcoal",
	"ChargedCertusQuartz",
	"Chrome",
	"Cinnabar",
	"Coal",
	"Cobalt",
	"Cocoa",
	"Coke",
	"ConductiveIron",
	"Constantan",
	"ConstructionAlloy",
	"Copper",
	"CrudeSteel",
	"Cryotheum",
	"CrystalBinder",
	"CrystalFlux",
	"CrystallineAlloy",
	"CrystallinePinkSlime",
	"DarkAshes",
	"DarkSteel",
	"Dawnstone",
	"Diamond",
	"Dimensional",
	"DimensionalShard",
	"Diorite",
	"ElectricalSteel",
	"Electrum",
	"ElectrumFlux",
	"Ember",
	"Emerald",
	"EnderEye",
	"Enderium",
	"EnderPearl",
	"EndSteel",
	"Endstone",
	"Energetic",
	"EnergeticAlloy",
	"EnergeticSilver",
	"Extreme",
	"Ferroboron",
	"Fluix",
	"Fluorite",
	"Flux",
	"Galena",
	"Garnet",
	"Gelid",
	"Glowstone",
	"Gold",
	"Granite",
	"Graphite",
	"Grossular",
	"HardCarbon",
	"HOPGraphite",
	"HotTungstensteel",
	"HSLASteel",
	"Invar",
	"Iridium",
	"IridiumAlloy",
	"Iron",
	"Lapis",
	"Lazurite",
	"Lead",
	"LeadPlatinum",
	"Lithium",
	"LithiumManganeseDioxide",
	"Lumium",
	"Magnesium",
	"MagnesiumDiboride",
	"Manganese",
	"ManganeseDioxide",
	"ManganeseOxide",
	"Marble",
	"MelodicAlloy",
	"Metallurgic",
	"Mithril",
	"MixedMetal",
	"Netherrack",
	"Nickel",
	"Obsidian",
	"Osmium",
	"Peridot",
	"Petrotheum",
	"Phosphorous",
	"Platinum",
	"PotassiumFlouride",
	"PotassiumHydroxide",
	"Prismarine",
	"PulsatingIron",
	"Pyrite",
	"Pyrope",
	"Pyrotheum",
	"Quartz",
	"RedGarnet",
	"Redstone",
	"RedstoneAlloy",
	"RefinedGlowstone",
	"RefinedIron",
	"RefinedObsidian",
	"Rhodocrosite",
	"Ruby",
	"Salt",
	"Sapphire",
	"Shibuichi",
	"SiCSiCCMC",
	"Signalum",
	"SiliconCarbide",
	"Sodalite",
	"SodiumFlouride",
	"SodiumHydroxide",
	"Soularium",
	"Spessartine",
	"Sphalerite",
	"Steel",
	"StellarAlloy",
	"Thermoconducting",
	"Thorium",
	"ThoriumOxide",
	"Tin",
	"TinSilver",
	"Titanium",
	"Tough",
	"Tungsten",
	"Tungstensteel",
	"Uranium",
	"UraniumOxide",
	"Uvarovite",
	"VibrantAlloy",
	"Villiaumite",
	"VividAlloy",
	"Wheat",
	"Wood",
	"YellowGarnet",
	"Zinc",
	"Zircaloy",
	"Zirconium"
//SILK_SORTING: END@SmallDust
] as string[];
for dustSmall in stringDustSmall {
	hashDustSmall[dustSmall] = oreDict["dustSmall" ~ dustSmall];
}

/***** Plates *****/
global hashPlate as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringPlate = [
//SILK_SORTING: BEGIN@Plate
	"Advanced",
	"AdvancedAlloy",
	"Aluminium",
	"Basic",
	"Boron",
	"BoronArsenide",
	"BoronNitride",
	"Brass",
	"Bronze",
	"Caminite",
	"Carbon",
	"Carobbiite",
	"CertusQuartz",
	"ChargedCertusQuartz",
	"Chrome",
	"Coal",
	"Cobalt",
	"ConductiveIron",
	"Constantan",
	"ConstructionAlloy",
	"Copper",
	"CrudeSteel",
	"CrystalFlux",
	"CrystallineAlloy",
	"CrystallinePinkSlime",
	"DarkSteel",
	"Dawnstone",
	"Diamond",
	"DU",
	"ElectricalSteel",
	"Electrum",
	"ElectrumFlux",
	"Elite",
	"Emerald",
	"Enderium",
	"EndSteel",
	"EnergeticAlloy",
	"EnergeticSilver",
	"Extreme",
	"Ferroboron",
	"Fluix",
	"Fluorite",
	"Garnet",
	"Gold",
	"Graphite",
	"HardCarbon",
	"HOPGraphite",
	"HotTungstensteel",
	"HSLASteel",
	"Invar",
	"Iridium",
	"IridiumAlloy",
	"Iron",
	"Lapis",
	"Lazurite",
	"Lead",
	"LeadPlatinum",
	"Lithium",
	"LithiumManganeseDioxide",
	"Lumium",
	"Magnalium",
	"Magnesium",
	"MagnesiumDiboride",
	"Manganese",
	"ManganeseDioxide",
	"ManganeseOxide",
	"MelodicAlloy",
	"Mithril",
	"MixedMetal",
	"Nickel",
	"Obsidian",
	"Osmium",
	"Peridot",
	"Platinum",
	"Prismarine",
	"PulsatingIron",
	"Quartz",
	"RawCaminite",
	"RedGarnet",
	"Redstone",
	"RedstoneAlloy",
	"RefinedGlowstone",
	"RefinedIron",
	"RefinedObsidian",
	"Rhodocrosite",
	"Ruby",
	"Sapphire",
	"Shibuichi",
	"SiCSiCCMC",
	"Signalum",
	"Silicon",
	"SiliconCarbide",
	"Silver",
	"Soularium",
	"Steel",
	"StellarAlloy",
	"Thermoconducting",
	"Thorium",
	"ThoriumOxide", 
	"Tin",
	"TinSilver",
	"Titanium",
	"Tough",
	"Tungsten",
	"Tungstensteel",
	"Uranium",
	"UraniumOxide", 
	"VibrantAlloy",
	"Villiaumite",
	"VividAlloy",
	"YellowGarnet",
	"Zinc",
	"Zircaloy",
	"Zirconium" 
//SILK_SORTING: END@Plate
] as string[];
for plate in stringPlate {
	hashPlate[plate] = oreDict["plate" ~ plate];
}

/***** Dense Plates *****/
global hashPlateDense as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringPlateDense = [
//SILK_SORTING: BEGIN@DensePlate
	"AdvancedAlloy",
	"Aluminium",
	"Boron",
	"BoronArsenide",
	"BoronNitride",
	"Brass",
	"Bronze",
	"Carbon",
	"Carobbiite",
	"CertusQuartz",
	"ChargedCertusQuartz",
	"Chrome",
	"Coal",
	"Cobalt",
	"ConductiveIron",
	"Constantan",
	"ConstructionAlloy",
	"Copper",
	"CrudeSteel",
	"CrystalFlux",
	"CrystallineAlloy",
	"CrystallinePinkSlime",
	"DarkSteel",
	"Dawnstone",
	"Diamond",
	"ElectricalSteel",
	"Electrum",
	"ElectrumFlux",
	"Emerald",
	"Enderium",
	"EndSteel",
	"EnergeticAlloy",
	"EnergeticSilver",
	"Extreme",
	"Ferroboron",
	"Fluix",
	"Fluorite",
	"Garnet",
	"Gold",
	"Graphite",
	"HardCarbon",
	"HOPGraphite",
	"HotTungstensteel",
	"HSLASteel",
	"Invar",
	"Iridium",
	"IridiumAlloy",
	"Iron",
	"Lapis",
	"Lazurite",
	"Lead",
	"LeadPlatinum",
	"Lithium",
	"LithiumManganeseDioxide",
	"Lumium",
	"Magnalium",
	"Magnesium",
	"MagnesiumDiboride",
	"Manganese",
	"ManganeseDioxide",
	"ManganeseOxide",
	"MelodicAlloy",
	"Mithril",
	"MixedMetal",
	"Nickel",
	"Obsidian",
	"Osmium",
	"Peridot",
	"Platinum",
	"Prismarine",
	"PulsatingIron",
	"Quartz",
	"RedGarnet",
	"Redstone",
	"RedstoneAlloy",
	"RefinedGlowstone",
	"RefinedIron",
	"RefinedObsidian",
	"Rhodocrosite",
	"Ruby",
	"Sapphire",
	"Shibuichi",
	"SiCSiCCMC",
	"Signalum",
	"Silicon",
	"SiliconCarbide",
	"Silver",
	"Soularium",
	"Steel",
	"StellarAlloy",
	"Thermoconducting",
	"Thorium",
	"ThoriumOxide", 
	"Tin",
	"TinSilver",
	"Titanium",
	"Tough",
	"Tungsten",
	"Tungstensteel",
	"Uranium",
	"UraniumOxide", 
	"VibrantAlloy",
	"Villiaumite",
	"VividAlloy",
	"YellowGarnet",
	"Zinc",
	"Zircaloy",
	"Zirconium" 
//SILK_SORTING: END@DensePlate
] as string[];
for plateDense in stringPlateDense {
	hashPlateDense[plateDense] = oreDict["plateDense" ~ plateDense];
}

/***** Rods *****/
global hashRod as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringRod = [
//SILK_SORTING: BEGIN@Stick
	"AdvancedAlloy",
	"Aluminium",
	"Basalz",
	"Blaze",
	"Blitz",
	"Blizz",
	"Boron",
	"BoronArsenide",
	"BoronNitride",
	"Brass",
	"Bronze",
	"Carobbiite",
	"CertusQuartz",
	"ChargedCertusQuartz",
	"Chrome",
	"Coal",
	"Cobalt",
	"ConductiveIron",
	"Constantan",
	"ConstructionAlloy",
	"Copper",
	"CrudeSteel",
	"CrystalFlux",
	"CrystallineAlloy",
	"CrystallinePinkSlime",
	"DarkSteel",
	"Dawnstone",
	"Diamond",
	"ElectricalSteel",
	"Electrum",
	"ElectrumFlux",
	"Emerald",
	"Enderium",
	"EndSteel",
	"EnergeticAlloy",
	"EnergeticSilver",
	"Extreme",
	"Ferroboron",
	"Fluix",
	"Fluorite",
	"Garnet",
	"Gold",
	"Graphite",
	"HardCarbon",
	"HOPGraphite",
	"HotTungstensteel",
	"HSLASteel",
	"Invar",
	"Iridium",
	"IridiumAlloy",
	"Iron",
	"Lapis",
	"Lead",
	"LeadPlatinum",
	"Lithium",
	"LithiumManganeseDioxide",
	"Lumium",
	"Magnesium",
	"MagnesiumDiboride",
	"Manganese",
	"ManganeseDioxide",
	"ManganeseOxide",
	"MelodicAlloy",
	"Mithril",
	"MixedMetal",
	"Nickel",
	"Obsidian",
	"Osmium",
	"Peridot",
	"Platinum",
	"PulsatingIron",
	"Quartz",
	"RedGarnet",
	"RedstoneAlloy",
	"RefinedGlowstone",
	"RefinedIron",
	"RefinedObsidian",
	"Rhodocrosite",
	"Ruby",
	"Sapphire",
	"Shibuichi",
	"SiCSiCCMC",
	"Signalum",
	"SiliconCarbide",
	"Silver",
	"Soularium",
	"Steel",
	"StellarAlloy",
	"Superium",
	"Supremium",
	"Thermoconducting",
	"Thorium",
	"ThoriumOxide",
	"Tin",
	"TinSilver",
	"Titanium",
	"Tough",
	"Tungsten",
	"Tungstensteel",
	"Uranium",
	"UraniumOxide",
	"VibrantAlloy",
	"Villiaumite",
	"VividAlloy",
	"YellowGarnet",
	"Zinc",
	"Zircaloy",
	"Zirconium" 
//SILK_SORTING: END@Stick
] as string[];
for rod in stringRod {
	hashRod[rod] = oreDict["rod" ~ rod];
}

/***** Gears *****/
global hashGear as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringGear = [
//SILK_SORTING: BEGIN@Gear
	"AdvancedAlloy",
	"Aluminium",
	"Boron",
	"BoronArsenide",
	"BoronNitride",
	"Brass",
	"Bronze",
	"Carobbiite",
	"CertusQuartz",
	"ChargedCertusQuartz",
	"Chrome",
	"Coal",
	"Cobalt",
	"ConductiveIron",
	"Constantan",
	"ConstructionAlloy",
	"Copper",
	"CrudeSteel",
	"CrystalFlux",
	"CrystallineAlloy",
	"CrystallinePinkSlime",
	"DarkSteel",
	"Dawnstone",
	"Diamond",
	"ElectricalSteel",
	"Electrum",
	"ElectrumFlux",
	"Emerald",
	"Enderium",
	"EndSteel",
	"EnergeticAlloy",
	"EnergeticSilver",
	"Extreme",
	"Ferroboron",
	"Fluix",
	"Fluorite",
	"Garnet",
	"Gold",
	"Graphite",
	"HardCarbon",
	"HOPGraphite",
	"HotTungstensteel",
	"HSLASteel",
	"Invar",
	"Iridium",
	"IridiumAlloy",
	"Iron",
	"Lapis",
	"Lead",
	"LeadPlatinum",
	"Lithium",
	"LithiumManganeseDioxide",
	"Lumium",
	"Magnesium",
	"MagnesiumDiboride",
	"Manganese",
	"ManganeseDioxide",
	"ManganeseOxide",
	"MelodicAlloy",
	"Mithril",
	"MixedMetal",
	"Nickel",
	"Osmium",
	"Peridot",
	"Platinum",
	"PulsatingIron",
	"Quartz",
	"RedGarnet",
	"RedstoneAlloy",
	"RefinedGlowstone",
	"RefinedIron",
	"RefinedObsidian",
	"Rhodocrosite",
	"Ruby",
	"Sapphire",
	"Shibuichi",
	"SiCSiCCMC",
	"Signalum",
	"SiliconCarbide",
	"Silver",
	"Soularium",
	"Steel",
	"StellarAlloy",
	"Superium",
	"Supremium",
	"Thermoconducting",
	"Thorium",
	"ThoriumOxide",
	"Tin",
	"TinSilver",
	"Titanium",
	"Tough",
	"Tungsten",
	"Tungstensteel",
	"Uranium",
	"UraniumOxide",
	"VibrantAlloy",
	"Villiaumite",
	"VividAlloy",
	"YellowGarnet",
	"Zinc",
	"Zircaloy",
	"Zirconium" 
//SILK_SORTING: END@Gear
] as string[];
for gear in stringGear {
	hashGear[gear] = oreDict["gear" ~ gear];
}

/********** Blocks **********/
/***** Blocks *****/
global hashBlock as IOreDictEntry[string] = {} as IOreDictEntry[string];
val stringBlock = [
//SILK_SORTING: BEGIN@Block
	
//SILK_SORTING: END@Block
] as string[];
for block in stringBlock {
	hashBlock[block] = oreDict["block" ~ block];
}


/********** Liquids **********/
/***** Liquids *****/

/***** Molten *****/
global hashMolten as ILiquidStack[string] = {} as ILiquidStack[string];
val stringMolten = [
	
] as string[];

/********** Gases **********/
/***** Other Gases *****/
global hashGas as IGasStack[string] = {} as IGasStack[string];
val stringGas = [
 
	"Brine",
	"Chlorine",
	"Deuterium",
	"Ethene",
	"DTFuel",
	"Hydrogen",
	"HydrogenChloride",
	"Lithium",
	"LiquidOsmium",
	"Oxygen",
	"Sodium",
	"SulfurDioxide",
	"SulfuricAcid",
	"SulfurTrioxide",
	"Tritium",
	"Water"
	
] as string[];
for gas in stringGas {
	hashGas[gas] = getGas(gas.toLowerCase);
}
hashGas["DTFuel"] = getGas("fusionfuel");
hashGas["HydrogenChloride"] = getGas("hydrogenchloride");
hashGas["LiquidOsmium"] = getGas("liquidosmium");
hashGas["SulfurDioxide"] = getGas("sulfurdioxide");
hashGas["SulfuricAcid"] = getGas("sulfuricacid");
hashGas["SulfurTrioxide"] = getGas("sulfurtrioxide");

/***** Slurry *****/
global hashSlurry as IGasStack[string] = {} as IGasStack[string];
val stringSlurry = [

	"Aluminium",
	"Boron",
	"Copper",
	"Gold",
	"Iridium",
	"Iron",
	"Lead",
	"Lithium",
	"Magnesium",
	"Mithril",
	"Nickel",
	"Osmium",
	"Platinum",
	"Silver",
	"Thorium",
	"Tin",
	"Tungsten",
	"Uranium"

] as string[];
for slurry in stringSlurry {
	hashSlurry[slurry] = getGas("slurry" ~ slurry);
}
hashSlurry["Copper"] = getGas("copper");
hashSlurry["Gold"] = getGas("gold");
hashSlurry["Iron"] = getGas("iron");
hashSlurry["Lead"] = getGas("lead");
hashSlurry["Osmium"] = getGas("osmium");
hashSlurry["Silver"] = getGas("silver");
hashSlurry["Tin"] = getGas("tin");

/***** Clean Slurry *****/
global hashSlurryClean as IGasStack[string] = {} as IGasStack[string];
val stringSlurryClean = [
	
	"Aluminium",
	"Boron",
	"Copper",
	"Gold",
	"Iridium",
	"Iron",
	"Lead",
	"Lithium",
	"Magnesium",
	"Mithril",
	"Nickel",
	"Osmium",
	"Platinum",
	"Silver",
	"Thorium",
	"Tin",
	"Tungsten",
	"Uranium"
	
] as string[];
for slurryClean in stringSlurryClean {
	hashSlurryClean[slurryClean] = getGas("slurryClean" ~ slurryClean);
}
hashSlurryClean["Copper"] = getGas("cleanCopper");
hashSlurryClean["Gold"] = getGas("cleanGold");
hashSlurryClean["Iron"] = getGas("cleanIron");
hashSlurryClean["Lead"] = getGas("cleanLead");
hashSlurryClean["Osmium"] = getGas("cleanOsmium");
hashSlurryClean["Silver"] = getGas("cleanSilver");
hashSlurryClean["Tin"] = getGas("cleanTin");
